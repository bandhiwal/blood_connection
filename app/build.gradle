apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.3"

    defaultConfig {
        applicationId "image.tumblr.hot"
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    lintOptions {
        abortOnError false
    }
}

configurations.all {
    resolutionStrategy.force 'com.android.support:support-annotations:27.1.1'
}

// Based on: http://goo.gl/cuAayN
// To run a test with permission granted:
//  ./gradlew :app:grantDebugPermissions :app:runDebugEspressoTests
android.applicationVariants.all { variant ->
    def applicationId = variant.applicationId
    def adb = android.getAdbExe().toString()
    def variantName = variant.name.capitalize()
    def grantPermissionTask = tasks.create(name: "grant${variantName}Permissions", type: Exec) {
        "${adb} devices".execute().text.eachLine {
            if (it.endsWith("device")) {
                def device = it.split()[0]
                commandLine(adb, "-s", device, "shell", "pm", "grant", applicationId,
                        "android.permission.WRITE_EXTERNAL_STORAGE")
                commandLine(adb, "-s", device, "shell", "pm", "grant", applicationId,
                        "android.permission.READ_EXTERNAL_STORAGE")
            }
        }
    }

    grantPermissionTask.dependsOn "install${variantName}"
    grantPermissionTask.dependsOn "install${variantName}AndroidTest"

    def runEspressoTestsTask = tasks.create(name: "run${variantName}EspressoTests", type: Exec) {
        commandLine(adb, "shell", "am", "instrument", "-w",  "-r", "-e", "debug", "false", "-e",
                "class", "${applicationId}.MainActivityTest",
                "${applicationId}.test/android.support.test.runner.AndroidJUnitRunner")
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:27.1.1'
    compile 'pub.devrel:easypermissions:0.1.9'
    compile 'com.intuit.sdp:sdp-android:1.0.5'
    compile 'com.google.firebase:firebase-auth:11.0.2'
    compile 'com.google.firebase:firebase-storage:11.0.2'
    compile 'com.google.firebase:firebase-database:11.0.2'
    /*compile 'com.google.android.gms:play-services:11.0.4'*/
    compile 'com.android.support:recyclerview-v7:27.1.1'
    compile 'com.android.support:design:27.1.1'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestCompile 'com.android.support.test.espresso:espresso-intents:3.0.2'
    androidTestCompile 'com.android.support.test:runner:1.0.2'
    compile 'com.android.support:cardview-v7:27.1.1'
    compile 'com.squareup.picasso:picasso:2.71828'

}

apply plugin: 'com.google.gms.google-services'